ASSIGNMENT-5
13.Read a text file as an input and select the palindrome words from the text and
store the palindrome words into another file (omit ‘.’ Or ‘;’ after the word).

palindrome()
{
	str=$1
	flg=0
	len=`echo $str|wc -c`
	len=`expr $len - 1`
	l=$len
	for((i=1;i<=len/2;i++))
        do
                a=`echo $str|cut -c $i`
                b=`echo $str|cut -c $l`
                if [ $a != $b ]
                then            
                    flg=1
                    break
                fi
                l=`expr $l - 1`
	  done
				if [ $flg -ne 1 ]
     		 	then
               	 echo $str>>palin.txt 
				fi
        
}

rm palin.txt
for word in $(<a.txt)
do
	echo $word>t.txt
	if grep -E '\.$|\;$' t.txt
		then
			count=`wc -c <t.txt`
			count=$(($count - 2))
	word=`cut -c 1-$count t.txt` 
	fi
	palindrome $word
done
clear
cat palin.txt

14.Read some files & directories through command line argument. Check whether
it is a file or directory. If it is a directory then list the files under this directory,
if it is a file then show the content of this file and count the line, words &
character number of this file and change the permission of the file.

if [ $# -eq 0 ]; then
	echo "No arguments specified"
	exit
fi
for i in $*
do
	if [ -f $i ]; then
		echo "$i is  a file"
		echo "Lines: $(cat $i | wc -l)"
		echo "Words: $(cat $i | wc -w)"
		echo "Chars: $(cat $i | wc -c)"

		if [ ! -w $i ]; then
			chmod "g-w" $i
			chmod "o-w" $i
		elif [ ! -x $i ]; then
			chmod "g+x" $i
			chmod "o+x" $i
		else
			ls -l $i | cut -d ' ' -f1
		fi
	else
		echo "$i is a directory"
    a=`dir $i`
    echo $a
	fi
done

15.Write a shell script to check how many files in your current directory and
display the name of the largest and smallest file.


flag=0
echo "No. of files in current directory is stated just below:" 
find . -type f| wc -l
for i in `dir`
do
  if [ -f $i ]
  then
      #Command to get size of a file (NOT DIRECTORY)
      size=$(wc -c <"$i")
      
      if [ $flag -eq 0 ]; then
          max_size=$size
          min_size=$size
          max_file=$i
          min_file=$i
          flag=1
      else
          if [ $size -gt $max_size ]; then
              max_size=$size
              max_file=$i
          fi

          if [ $size -lt $min_size ]; then
              min_size=$size
              min_file=$i
          fi
       fi   
  fi
done

echo "The largest file is" $max_file "with size" $max_size
echo "The smallest file is" $min_file "with size" $min_size